!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a74b847/
ConvertLogLine	main.go	/^func ConvertLogLine(logLine string) LogLine {$/;"	f	package:main	typeref:typename:LogLine
LogLine	main.go	/^type LogLine struct {$/;"	s	package:main
LogLineString	main.go	/^func LogLineString(logLine LogLine) string {$/;"	f	package:main	typeref:typename:string
TestConvertLogLine	main_test.go	/^func TestConvertLogLine(t *testing.T) {$/;"	f	package:main
TestLogLineString	main_test.go	/^func TestLogLineString(t *testing.T) {$/;"	f	package:main
body_bytes_sent	main.go	/^	body_bytes_sent string$/;"	m	struct:main.LogLine	typeref:typename:string
http_referer	main.go	/^	http_referer    string$/;"	m	struct:main.LogLine	typeref:typename:string
http_user_agent	main.go	/^	http_user_agent string$/;"	m	struct:main.LogLine	typeref:typename:string
main	main.go	/^func main() {$/;"	f	package:main
main	main.go	/^package main$/;"	p
main	main_test.go	/^package main$/;"	p
reSubMatchMap	main.go	/^func reSubMatchMap(r *regexp.Regexp, str string) map[string]string {$/;"	f	package:main	typeref:typename:map[string]string
remote_addr	main.go	/^	remote_addr string$/;"	m	struct:main.LogLine	typeref:typename:string
remote_user	main.go	/^	remote_user string$/;"	m	struct:main.LogLine	typeref:typename:string
request	main.go	/^	request         string$/;"	m	struct:main.LogLine	typeref:typename:string
sortByPopularity	main.go	/^func sortByPopularity(metric map[string]int) {$/;"	f	package:main
status	main.go	/^	status          string$/;"	m	struct:main.LogLine	typeref:typename:string
time_local	main.go	/^	time_local  string$/;"	m	struct:main.LogLine	typeref:typename:string
